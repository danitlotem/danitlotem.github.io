{"version":3,"sources":["Tracks.js","Loopfiles/BVOC.mp3","Loopfiles/DRUMS.mp3","Loopfiles/HEHEVOC.mp3","Loopfiles/HIGHVOC.mp3","Loopfiles/JIBRISH.mp3","Loopfiles/LEAD1.mp3","Loopfiles/TambourineShake.mp3","Loopfiles/UUHOVOC.mp3","Components/AudioChannel.js","Components/BottomButtons.js","Components/AudioPlayer.js","App.js","store/index.js","index.js"],"names":["tracks","id","name","audioSrc","length","AudioChannels","props","useState","pressed","setPressed","volume","setVolume","playState","useSelector","state","play","loopState","loop","ended","dispatch","useDispatch","useSound","onend","type","stop","useEffect","className","style","backgroundColor","color","Button","variant","onClick","val","index","BottomButtons","playHandler","ButtonGroup","disabled","AudioPlayer","seconds","setSeconds","interval","setInterval","clearInterval","Slider","sx","size","value","min","step","max","App","color_list","map","item","store","createStore","mute","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e048a54.chunk.js","sourcesContent":["import BVOC from \"./Loopfiles/BVOC.mp3\";\r\nimport DRUMS from \"./Loopfiles/DRUMS.mp3\";\r\nimport HEHEVOC from \"./Loopfiles/HEHEVOC.mp3\";\r\nimport HIGHVOC from \"./Loopfiles/HIGHVOC.mp3\";\r\nimport JIBRISH from \"./Loopfiles/JIBRISH.mp3\";\r\nimport LEAD1 from \"./Loopfiles/LEAD1.mp3\";\r\nimport TambourineShake from \"./Loopfiles/TambourineShake.mp3\";\r\nimport UUHOVOC from \"./Loopfiles/UUHOVOC.mp3\";\r\n\r\nconst tracks = [\r\n    {\r\n        id: 0,\r\n        name: \"BVOC\",\r\n        audioSrc: BVOC,\r\n        length: 17\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"DRUMS\",\r\n        audioSrc: DRUMS,\r\n        length: 17\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"HEHEVOC\",\r\n        audioSrc: HEHEVOC,\r\n        length: 17\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"HIGHVOC\",\r\n        audioSrc: HIGHVOC,\r\n        length: 17\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"JIBRISH\",\r\n        audioSrc: JIBRISH,\r\n        length: 17\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"LEAD1\",\r\n        audioSrc: LEAD1,\r\n        length: 17\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"TambourineShake\",\r\n        audioSrc: TambourineShake,\r\n        length: 17\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"UUHOVOC\",\r\n        audioSrc: UUHOVOC,\r\n        length: 17\r\n    }\r\n];\r\n\r\nexport default tracks;\r\n","export default __webpack_public_path__ + \"static/media/BVOC.5ffa9906.mp3\";","export default __webpack_public_path__ + \"static/media/DRUMS.f0332952.mp3\";","export default __webpack_public_path__ + \"static/media/HEHEVOC.fd659059.mp3\";","export default __webpack_public_path__ + \"static/media/HIGHVOC.f09f6e03.mp3\";","export default __webpack_public_path__ + \"static/media/JIBRISH.d23f0b60.mp3\";","export default __webpack_public_path__ + \"static/media/LEAD1.f8658c33.mp3\";","export default __webpack_public_path__ + \"static/media/TambourineShake.2ceb47bf.mp3\";","export default __webpack_public_path__ + \"static/media/UUHOVOC.bc87006a.mp3\";","import './Style/AudioChannel.css'\r\nimport * as React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@mui/material/Button';\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport tracks from '../Tracks'\r\nimport useSound from 'use-sound'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AudioChannels = (props) =>\r\n{\r\n    const [pressed, setPressed] = useState(false) \r\n    const [volume, setVolume] = useState(true)\r\n    const playState = useSelector(state => { return state.play })// get current play state from store\r\n    const loopState = useSelector(state => { return state.loop }) // get current loop state from store\r\n    const ended = useSelector(state => { return state.ended })\r\n    const dispatch = useDispatch();\r\n    \r\n    const [play, { stop }] = useSound(tracks[props.id].audioSrc, {\r\n        volume: volume ? 1 : 0,\r\n        onend: () =>\r\n        {\r\n            dispatch({ type: 'PLAYLOOP_ENDED' });\r\n        }\r\n    });\r\n\r\n    const HandleVolume = (id) =>\r\n    {\r\n        //if mute button is press change volume to 0 \r\n        setVolume(!volume);\r\n        setPressed(!pressed)\r\n        dispatch({ type: 'MUTE', val: pressed, index: id }); //change button state\r\n    }\r\n    \r\n    useEffect(() =>\r\n    {\r\n        if (playState)\r\n        {\r\n            play(); // if play in on - play music\r\n        }\r\n        else\r\n        {\r\n            stop();// if play in off (stop is on) - stop music\r\n        }\r\n    }, [playState, dispatch, play, stop]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        if (loopState)\r\n        {\r\n            dispatch({ type: 'LOOP', loop: true }); // change loop state in store\r\n        }\r\n    }, [loopState, dispatch])\r\n\r\n    useEffect(() =>\r\n    {\r\n        if (loopState) // if sound ended and loopstate is true - play another round\r\n        {\r\n            play();\r\n        }\r\n    }, [ended])\r\n\r\n    return (\r\n\r\n        < div className=\"AudioChannel-contianer\" style={ { backgroundColor: props.color } }>\r\n            <div>{ `${ props.id + 1 }) ${ props.name }` }</div> \r\n            < Button color={ (pressed === true) ? \"error\" : \"success\" } variant=\"contained\" className=\"AudioChannel-muteButton\" onClick={ () => HandleVolume(props.id) }>\r\n                {\r\n                    pressed && <VolumeOffIcon /> // if button is pressed - VolumeOff icon\r\n                }\r\n                {\r\n                    !pressed && <VolumeUpIcon />// if button is pressed - VolumeOn icon\r\n\r\n                }\r\n            </Button >\r\n        </div >)\r\n\r\n}\r\n\r\nexport default AudioChannels","import './Style/BottomButtons.css'\r\nimport React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\r\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nconst BottomButtons = () =>\r\n{\r\n    const playState = useSelector(state => { return state.play }) // get current play state from store\r\n    const loopState = useSelector(state => { return state.loop }) // get current loop state from store\r\n    const dispatch = useDispatch();\r\n\r\n    const playHandler = () =>\r\n    {\r\n        dispatch({ type: 'PLAY', play: !playState }); // change play state\r\n    }\r\n\r\n    const loopHandler = () =>\r\n    {\r\n        dispatch({ type: 'LOOP', loop: !loopState });// change play state\r\n    }\r\n\r\n    return (\r\n        <div className=\"BottomButtons-contianer\">\r\n            <ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\r\n                {/* \r\n                    if the button is pressed it will disabled \r\n                    if loop is pressed the color will be green\r\n                */}\r\n                <Button disabled={playState}  className=\"BottomButtons-Icon\" onClick={ playHandler } ><PlayCircleIcon /></Button>\r\n                <Button disabled={!playState} className=\"BottomButtons-Icon\" onClick={ playHandler }><StopCircleIcon /></Button>\r\n                <Button color={ (loopState === true) ? \"success\" : \"info\" }  className=\"BottomButtons-Icon\" onClick={ loopHandler }><LoopIcon /></Button>\r\n            </ButtonGroup >\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default BottomButtons","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Slider from '@mui/material/Slider';\r\nimport './Style/AudioPlayer.css'\r\n\r\nexport default function AudioPlayer(props)\r\n{\r\n    const duration = 17; // the numbers of seconds in all sound tracks \r\n    const [seconds, setSeconds] = useState(0);\r\n\r\n    const playState = useSelector(state => { return state.play })\r\n    const loopState = useSelector(state => { return state.loop })\r\n\r\n    useEffect(() =>\r\n    {\r\n        const interval = setInterval(() =>\r\n        {\r\n            setSeconds(seconds => seconds + 1); // increase seconds by one\r\n\r\n        }, 1000); // each iteration is 1 second\r\n        return () => clearInterval(interval);\r\n    }, [playState]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        let interval = null;\r\n        if (loopState && seconds >= duration)\r\n        {\r\n            setSeconds(0);// reset seconds\r\n            clearInterval(interval);\r\n        }\r\n\r\n        if (!playState)\r\n        {\r\n            setSeconds(0); // reset seconds\r\n            clearInterval(interval);\r\n        }\r\n\r\n        return (() =>\r\n        {\r\n            clearInterval(interval);\r\n        })\r\n    }, [loopState, playState, seconds]);\r\n\r\n    return (\r\n        <div className=\"cursor\">\r\n            < Slider sx={ { color: \"white\" } } className=\"slider\" aria-label=\"time-indicator\" size=\"small\" value={ seconds } min={ 0 } step={ 1 } max={ duration } />\r\n        </div>\r\n    );\r\n}\r\n","import \"./index\";\nimport AudioChannel from \"./Components/AudioChannel\";\nimport BottomButtons from \"./Components/BottomButtons\";\nimport AudioPlayer from './Components/AudioPlayer'\nimport tracks from './Tracks'\n\n\nconst App = () =>\n{\n  //list of colors \n  const color_list = [\n    {\n      id: 0,\n      color: \"#4CA9DD\",\n    },\n    {\n      id: 1,\n      color: \"#70B8E0\",\n    },\n    {\n      id: 2,\n      color: \"#86C4E7\",\n    },\n    {\n      id: 3,\n      color: \"#9CD0EE\",\n    },\n    {\n      id: 4,\n      color: \"#9CDFEE\",\n    },\n    {\n      id: 5,\n      color: \"#87DEF1\",\n    },\n    {\n      id: 6,\n      color: \"#6AD2E9\",\n    },\n    {\n      id: 7,\n      color: \"#63C4D9\",\n    },\n  ]\n\n  return (\n\n    <div className=\"mainContainer\" >\n      <AudioPlayer id={ color_list.id } /> {/*aodio player component */}\n      <div >\n        {\n          //turn color_list into list of audio cannels\n          color_list.map((item, index) => { return <AudioChannel color={ item.color } id={ item.id } name={ tracks[index].name } key={ item.id } /> })\n        }\n      </div>\n      <BottomButtons /> {/*[play,stop,loop] component */}\n    </div >\n  );\n}\n\nexport default App;\n","import { createStore } from 'redux';\r\n\r\n\r\nconst Reducer = (state = {\r\n    play: false,\r\n    loop: false,\r\n    ended: 1,\r\n    mute: { val: false, index: -1 }\r\n}, action) =>\r\n{\r\n\r\n    if (action.type === 'PLAY') // play button state\r\n    {\r\n        return { ...state, play: action.play };\r\n    }\r\n\r\n    if (action.type === 'LOOP')// loop button state\r\n    {\r\n        return { ...state, loop: action.loop };\r\n    }\r\n    if (action.type === 'PLAYLOOP_ENDED')// sound ended state\r\n    {\r\n        return { ...state, ended: state.ended + 1 };\r\n    }\r\n    if (action.type === 'MUTE')// mute button state\r\n    {\r\n        return { ...state, mute: { val: action.value, index: action.index } };\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nconst store = createStore(Reducer, { play: false, loop: false,ended:1, mute: { val: false, index: -1 }, });\r\n\r\nexport default store;","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\n\n\nReactDOM.render(<Provider store={ store } ><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}